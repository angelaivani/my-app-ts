{"version":3,"sources":["utils/datadogLogs/index.ts","pages/Landing/Landing.tsx","pages/AddProduct/AddProduct.tsx","pages/ProductList/ProductList.tsx","pages/BuggyPage/BuggyPage.tsx","ErrorBoundary.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialSourceMapObj","version","sources","names","sourcesContent","mappings","getMapFileName","fileName","getOriginalStackFrames","stackFrames","Promise","resolve","reject","mapSourceMapFile","forEach","stackFrame","mapFileName","String","console","log","sourceMapObjPromises","Object","keys","map","fetch","mode","then","res","json","response","catch","Error","sourceMapObj","sourceMap","all","item","transformedStacks","idx","sourceMapFileObj","stackFrameOriginal","SourceMap","SourceMapConsumer","originalPositionFor","line","lineNumber","column","columnNumber","path","source","includes","replace","name","join","parsedStackFrame","error","ErrorStackParser","parse","message","Landing","AddProduct","useState","isSelected","listCars","setListCars","handleChangeCheckbox","e","target","checked","index","findIndex","newList","FormGroup","carItem","FormControlLabel","control","Checkbox","onChange","label","warehouseList","id","ProductList","navigate","useNavigate","warehouseId","productSku","filterForm","users","setUsers","getData","axios","get","responseUsers","data","responseUser","fetchFakeError","errResponse","datadogLogs","logger","url","config","method","Box","sx","display","justifyContent","Button","onClick","alignItems","width","FormControl","fullWidth","InputLabel","Select","labelId","value","event","MenuItem","BuggyPage","counter","setCounter","info","prev","ErrorComponent","ErrorBoundary","state","hasError","stack","errorInfo","componentStack","handleLogs","parsedErrorStack","setState","this","children","props","React","Component","getDerivedStateFromError","App","className","to","style","marginRight","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","ReactDOM","createRoot","document","getElementById","init","clientToken","env","service","site","forwardErrorsToLogs","sampleRate","render","StrictMode"],"mappings":"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","file":"static/js/main.4a3c9e3c.chunk.js","sourcesContent":["import SourceMap from 'source-map-js'\nimport { datadogLogs } from '@datadog/browser-logs'\nimport { datadogRum } from '@datadog/browser-rum'\nimport ErrorStackParser from 'error-stack-parser'\n\nexport const initDatadogLogs = () => {\n  datadogLogs.init({    \n    clientToken: 'pub39b777e4b13fc853f8df073ae3a9de03',\n    env: 'development',\n    service: 'my-ts-app',\n    site: 'us5.datadoghq.com',\n    forwardErrorsToLogs: false,\n    sampleRate: 100,\n  })  \n}\n\nexport const initDatadogRum = () => {\n  datadogRum.init({\n    applicationId: 'f751ab6b-15c7-49fe-bb07-e24f95b86614',\n    clientToken: 'pub2adfd6205348b86b3750b371febecb9d',\n    site: 'us5.datadoghq.com',\n    service:'my-ts-app',\n    env:'my-ts-app-dev',    \n    version: '1.0.0',\n    sampleRate: 100,\n    premiumSampleRate: 100,\n    trackInteractions: true,\n    defaultPrivacyLevel:'mask-user-input',\n    sessionReplaySampleRate: 0,\n    allowedTracingOrigins: [\"https://angelaivani.github.io/my-app-ts/\", (origin) => { console.log('ORIGIN', origin); return origin === \"https://angelaivani.github.io/my-app-ts\" || origin === \"https://angelaivani.github.io\" || origin === \"http://localhost:3000\"}]\n});\n}\n\ntype MapSourceMapFileType = {\n  [k: string]: SourceMap.RawSourceMap\n}\n\nconst initialSourceMapObj = {\n  version: '3',\n  sources: [],\n  names: [],\n  sourcesContent: [],\n  mappings: '',\n}\n\nconst getMapFileName = (fileName: string) => `${fileName}.map`\n\nconst getOriginalStackFrames = (stackFrames: StackFrame[]): Promise<string> =>\n  new Promise(async (resolve, reject) => {\n    const mapSourceMapFile: MapSourceMapFileType = {}\n\n    // filter to distinct mapFileName\n    stackFrames.forEach((stackFrame) => {\n      const { fileName } = stackFrame\n      const mapFileName = getMapFileName(String(fileName))\n\n      if (fileName) {\n        if (fileName in mapSourceMapFile) {\n          return\n        }\n\n        // set to default shape\n        mapSourceMapFile[mapFileName] = initialSourceMapObj\n      }\n    })\n\n    console.log('mapSourceMapFile', mapSourceMapFile);\n\n    // get related sourceMapFile\n    const sourceMapObjPromises = Object.keys(mapSourceMapFile).map(async (mapFileName) => {\n      const sourceMapObj = await fetch(mapFileName, {\n        mode: 'no-cors',\n      })\n        .then((res) => res.json())\n        .then((response) => response)\n        .catch(() => reject(new Error(`Failed to fetch ${mapFileName}`)))\n\n      return {\n        mapFileName,\n        sourceMap: sourceMapObj,\n      }\n    })\n\n    const sourceMapObjs = await Promise.all(sourceMapObjPromises)\n\n    sourceMapObjs.forEach((item) => {\n      mapSourceMapFile[item.mapFileName] = item.sourceMap\n    })\n\n    const transformedStacks = stackFrames.map((stackFrame: StackFrame, idx: number) => {\n      const { fileName } = stackFrame\n\n      const mapFileName = getMapFileName(String(fileName))\n\n      const sourceMapFileObj = mapSourceMapFile[mapFileName]\n\n      const consumer = new SourceMap.SourceMapConsumer(sourceMapFileObj)\n\n      const stackFrameOriginal = consumer.originalPositionFor({\n        line: stackFrame.lineNumber as number,\n        column: stackFrame.columnNumber as number,\n      })\n\n      const path = stackFrameOriginal.source?.includes('..')\n        ? stackFrameOriginal.source.replace('..', '/static')\n        : `${stackFrameOriginal.source}`\n\n      return `${idx > 0 ? '\\n' : ''}at ${stackFrameOriginal.name} ${path}:${\n        stackFrameOriginal.line\n      }:${stackFrameOriginal.column + 1}`\n    })\n\n    resolve(transformedStacks.join(''))\n  })\n\nexport const parsedStackFrame = async (error: Error): Promise<string> => {\n  const stackFrames = ErrorStackParser.parse(error)\n  console.log('STACK FRAMES', stackFrames)\n\n  try {\n    return await getOriginalStackFrames(stackFrames)\n  } catch ({ message }) {\n    return message as string\n  } \n}","const Landing = () => (\n  <h1>Hi Landing</h1>\n)\nexport default Landing","import { useState } from 'react' \nimport { FormGroup, FormControlLabel, Checkbox, CheckboxProps } from '@mui/material' \n\nconst AddProduct = () => {\n  const [listCars, setListCars] = useState([\n    {\n      name: 'Avanza',\n      isSelected: false\n    },\n    {\n      name: 'Toyota',\n      isSelected: false\n    }\n  ])\n  \n  const handleChangeCheckbox: CheckboxProps['onChange'] = (e) => {\n    const { name, checked } = e.target\n    const index = listCars.findIndex(item => item.name === name)\n\n    const newList = listCars.map(item => ({...item}))\n    newList[index].isSelected = checked\n    setListCars(newList)    \n  }\n\n  return (\n    <div>\n      <h1>Add Product Page</h1>    \n    <FormGroup>\n      {listCars.map(carItem => (\n        <FormControlLabel key={carItem.name} control={<Checkbox name={carItem.name} checked={carItem.isSelected} onChange={handleChangeCheckbox} /> } label={carItem.name} />\n      ))}        \n    </FormGroup>        \n    </div>\n  )\n}\nexport default AddProduct","import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Box, Button, FormControl, InputLabel, Select, SelectProps, MenuItem } from '@mui/material'\nimport axios, { AxiosError } from 'axios'\nimport { datadogLogs } from '@datadog/browser-logs'\n\ntype UserStateType = {\n  id: string\n  name: string\n}\n\ntype FilterFormStateType = {\n  warehouseId: number\n  productSku: string\n}\n\nconst warehouseList = [\n  {\n    id: 1,\n    name: 'Kosambi'\n  },\n  {\n    id: 2,\n    name: 'Pegangsaan'\n  },\n  {\n    id: 3,\n    name: 'Jatim'\n  }\n]\nconst ProductList = () => {\n  const navigate = useNavigate()\n  const [filterForm, setFilterForm] = useState<FilterFormStateType>({\n    warehouseId: 0,\n    productSku: ''\n  })\n\n  const [users, setUsers] = useState<UserStateType[]>([])    \n\n  const getData = async() => {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users')\n    let responseUsers: UserStateType[] = response.data.map((responseUser: any) => {\n      return {\n        id: responseUser.id,\n        name: responseUser.name\n      }\n    })    \n    setUsers(responseUsers)\n  }\n\n  const handleRedirectToAddProduct = () => {\n    navigate('/product/add')\n  }\n\n  const handleChangeWarehouse: SelectProps['onChange'] = (event) => {    \n    console.log('SELECTED', event.target)\n  }\n\n  const fetchFakeError = async() => {\n    try {      \n      const response = await axios.get('https://mock.codes/400')\n      console.log('RESPONSE', response)\n    }\n    catch(err) {\n      const errResponse = err as AxiosError\n      datadogLogs.logger.error('API CALL ERROR', {      \n        url: errResponse?.config?.url, method: errResponse?.config?.method\n      })      \n    }\n  }\n\n  return (\n    <>\n    <Box sx={{ display: 'flex', justifyContent: 'flex-end'}}>\n      <Button onClick={handleRedirectToAddProduct}>Add Product</Button>\n    </Box>\n    \n    <Box sx={{ display: 'flex', alignItems: 'center', width: '20%'}}>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">Gudang</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          name=\"warehouseId\"\n          value={filterForm.warehouseId}\n          label=\"Gudang\"\n          onChange={handleChangeWarehouse}\n        > \n        {warehouseList.map((item) => (\n          <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\n        ))}                       \n        </Select>\n      </FormControl>\n      \n    </Box>\n\n    <button onClick={() => getData()}>FETCH DATA</button>\n    <button onClick={() => fetchFakeError()}>Simulate fake error</button>\n    <ul >\n      {users.map(item => (\n        <li key={item.id} data-testid=\"results\">{item.id} - {item.name}</li>\n      ))}\n    </ul>\n    </>        \n  )\n}\nexport default ProductList","import { useState } from 'react'\nimport { datadogLogs } from '@datadog/browser-logs'\nimport { Button } from '@mui/material'\n\nconst BuggyPage = () => {  \n  const [counter, setCounter] = useState(0)\n\n  const handleAddCounter = () => {\n    datadogLogs.logger.info('click counter in my-ts-app repo', { counter: counter+1})    \n    setCounter(prev => prev + 1)\n  }\n\n  if(counter === 5) {    \n    throw new Error('error')\n  }\n\n  return (\n    <>\n    <Button onClick={handleAddCounter}>Add counter</Button>\n      <p>Current counter {counter}</p>\n      <p>when counter reach 5, error will be thrown</p>   \n    </>\n      \n  )\n}\nexport default BuggyPage","import React from 'react'\nimport { datadogLogs } from '@datadog/browser-logs'\nimport { parsedStackFrame } from 'utils/datadogLogs/'\n\nconst ErrorComponent = () => <h1>ada error nie</h1>\n\nclass ErrorBoundary extends React.Component {\n  state = {\n    hasError: false,\n    error: { message: '', stack: '' },\n    errorInfo: { componentStack: '' },\n  }\n\n  static getDerivedStateFromError = (error) => {    \n    return { hasError: true }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.handleLogs(error, errorInfo)\n  }\n\n  handleLogs = async(error, errorInfo) => {\n    const parsedErrorStack = await parsedStackFrame(error)\n    console.log('parsedErrorStack', parsedErrorStack) // eslint-disable-line\n    console.log('ERROR', error)\n    console.log('ERROR INFO', errorInfo)\n    // datadogLogs.logger.error('ERROR BOUNDARY in my-ts-app repo', {      \n    //   errorInformation: errorInfo.componentStack,\n    //   errorSource: 'ERROR BOUNDARY',\n    // })\n\n    this.setState({ error, errorInfo })\n\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { children } = this.props\n    if(hasError) {      \n      return <ErrorComponent />\n    }\n    return children    \n  }\n}\nexport default ErrorBoundary\n","import { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\nimport Landing from 'pages/Landing'\nimport AddProduct from 'pages/AddProduct'\nimport ProductList from 'pages/ProductList'\nimport BuggyPage from 'pages/BuggyPage'\nimport ErrorBoundary from 'ErrorBoundary'\nimport './App.css';\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">              \n        <BrowserRouter>\n        <Link to=\"/\" style={{ marginRight: '15px' }}>Landing Page</Link>\n        <Link to=\"/product/list\" style={{ marginRight: '15px' }}>Product List</Link>\n        <Link to=\"/product/add\" style={{ marginRight: '15px' }}>Product Add</Link>\n        <Link to=\"/buggy-page\" style={{ marginRight: '15px' }}>Buggy Page</Link>\n        <br />\n\n        <Routes>\n          <Route path=\"/\" element={<Landing />} />\n          <Route path=\"/product/add\" element={<AddProduct />} />\n          <Route path=\"/product/list\" element={<ProductList />} />          \n          <Route path=\"/buggy-page\" element={<BuggyPage />} />\n        \n          \n        </Routes>\n        </BrowserRouter>      \n    </div>\n    </ErrorBoundary>    \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { initDatadogLogs } from 'utils/datadogLogs'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\ninitDatadogLogs()\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}